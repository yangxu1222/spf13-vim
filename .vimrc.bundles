" Modeline and Notes {
"
"                    __ _ _____              _
"         ___ _ __  / _/ |___ /      __   __(_)_ __ ___
"        / __| '_ \| |_| | |_ \ _____\ \ / /| | '_ ` _ \
"        \__ \ |_) |  _| |___) |_____|\ V / | | | | | | |
"        |___/ .__/|_| |_|____/        \_/  |_|_| |_| |_|
"            |_|
"
"   This is the personal .vimrc.bundles file of Steve Francia.
"   While much of it is beneficial for general use, I would
"   recommend picking out the parts you want and understand.
"
"   This file imports the various plugins of spf13. If you
"   wish to alter which groups are imported, see vimrc.before.
"   If you wish to add or remove individual bundles, create
"   ~/.vimrc.bundles.local and `Plugin` or `UnPlugin` as needed
"   from there.
"
"   You can find me at http://spf13.com
" }

" Environment {

set nocompatible        " Must be first line
filetype off
set rtp+=~/.vim/bundle/Vundle
call vundle#begin()

Plugin 'octol/vim-cpp-enhanced-highlight'
Plugin 'scrooloose/nerdtree'
Plugin 'altercation/vim-colors-solarized'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'vim-airline/vim-airline'

Plugin 'vim-scripts/a.vim'
Plugin 'elzr/vim-json'
Plugin 'majutsushi/tagbar'
Plugin 'ludovicchabant/vim-gutentags'
"Plugin 'w0rp/ale'
Plugin 'airblade/vim-gitgutter'
Plugin 'Raimondi/delimitMate'
"Plugin 'rhysd/vim-clang-format'
"Plugin 'kana/vim-operator-user'
"Plugin 'ycm-core/YouCompleteMe'
"Plugin 'zxqfl/tabnine-vim'o
call vundle#end()

filetype plugin indent on

"
"" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just
" :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to
" auto-approve removal
""
" " see :h vundle for more details or wiki for FAQ
" " Put your non-Plugin stuff after this line


"" Plugins {
"    if !exists('g:spf13_bundle_groups')
"        let g:spf13_bundle_groups=['general', 'writing', 'neocomplete', 'programming', 'python']
"    endif
"    " General {
"        if count(g:spf13_bundle_groups, 'general')
"            Plugin 'scrooloose/nerdtree'
"            Plugin 'altercation/vim-colors-solarized'
"            Plugin 'ctrlpvim/ctrlp.vim'
"            Plugin 'vim-airline/vim-airline'
"            Plugin 'vim-scripts/a.vim'
"
"            "Plugin 'spf13/vim-colors'
"            "Plugin 'tpope/vim-surround'
"            "Plugin 'tpope/vim-repeat'
"            "Plugin 'rhysd/conflict-marker.vim'
"            "Plugin 'jiangmiao/auto-pairs'
"            "Plugin 'tacahiroy/ctrlp-funky'
"            "Plugin 'terryma/vim-multiple-cursors'
"            "Plugin 'vim-scripts/sessionman.vim'
"            "Plugin 'matchit.zip'
"            "Plugin 'vim-airline/vim-airline-themes'
"            "Plugin 'powerline/fonts'
"            "Plugin 'bling/vim-bufferline'
"            "Plugin 'easymotion/vim-easymotion'
"            "Plugin 'jistr/vim-nerdtree-tabs'
"            "Plugin 'flazz/vim-colorschemes'
"            "Plugin 'mbbill/undotree'
"            "Plugin 'nathanaelkane/vim-indent-guides'
"            "if !exists('g:spf13_no_views')
"            "    Plugin 'vim-scripts/restore_view.vim'
"            "endif
"            "Plugin 'mhinz/vim-signify'
"            "Plugin 'tpope/vim-abolish.git'
"            "Plugin 'osyo-manga/vim-over'
"            "Plugin 'kana/vim-textobj-user'
"            "Plugin 'kana/vim-textobj-indent'
"            "Plugin 'gcmt/wildfire.vim'
"        endif
"    " }
"
"    " General Programming {
"        if count(g:spf13_bundle_groups, 'programming')
"            " Pick one of the checksyntax, jslint, or syntastic
"            "Plugin 'scrooloose/syntastic'
"            "Plugin 'tpope/vim-fugitive'
"            "Plugin 'mattn/webapi-vim'
"            "Plugin 'mattn/gist-vim'
"            "Plugin 'scrooloose/nerdcommenter'
"            "Plugin 'tpope/vim-commentary'
"            "Plugin 'godlygeek/tabular'
"            "Plugin 'luochen1990/rainbow'
"            "Plugin 'majutsushi/tagbar'
"        endif
"    " }
"
""    endif
"
"" }
